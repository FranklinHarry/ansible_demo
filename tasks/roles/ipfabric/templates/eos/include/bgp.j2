{% macro configure_routing_instances(spine) %}
{% for vrf, config in vrfs.iteritems() %}


interface Loopback{{ config.id }}
   vrf forwarding {{ vrf }}
   ip address {{ config.loopback_range }}.{{ spine*240+id }}/32

route-map EXPORT-CONNECTED-{{vrf.upper()}} permit 10
   set origin igp
   match interface Loopback{{ config.id }}
route-map EXPORT-CONNECTED-{{vrf.upper()}} deny 100
{% endfor %}
{% endmacro %}

{% macro configure_bgp_spine() %}
router bgp 65000
{% for vrf, config in vrfs.iteritems() %}

{% set link_id = 0 %}
   vrf {{ vrf }}
      router-id {{ config.loopback_range }}.{{ 240+id }}
      local-as {{ config.as_range }}
      redistribute connected route-map EXPORT-CONNECTED-{{vrf.upper()}}
      maximum-paths 128 ecmp 128
{% for interface in interface_list %}
{% if not ( interface.startswith('Management') ) and interface_details[interface]['is_up'] %}
      neighbor {{interconnect_range[id]}}.{{ 2*link_id+1 }} remote-as {{ config.as_range + link_id + 1 }}
      neighbor {{interconnect_range[id]}}.{{ 2*link_id+1 }} maximum-routes 12000
{% endif %}
{% set link_id = link_id + 1 %}
{% endfor %}
{% endfor %}
{% endmacro %}

{% macro configure_bgp_leaf() %}
router bgp 65000
{% for vrf, config in vrfs.iteritems() %}
{% set link_id = 0 %}
   vrf {{ vrf }}
      router-id {{ config.loopback_range }}.{{ id }}
      local-as {{ config.as_range + id }}
      redistribute connected route-map EXPORT-CONNECTED-{{vrf.upper()}}
      maximum-paths 128 ecmp 128

      neighbor {{interconnect_range[0]}}.{{ 2*(id-1) }} remote-as {{ config.as_range }}
      neighbor {{interconnect_range[0]}}.{{ 2*(id-1) }} maximum-routes 12000

      neighbor {{interconnect_range[1]}}.{{ 2*(id-1) }} remote-as {{ config.as_range }}
      neighbor {{interconnect_range[1]}}.{{ 2*(id-1) }} maximum-routes 12000

{% set link_id = link_id + 1 %}
{% endfor %}
{% endmacro %}

{% if inventory_hostname.startswith('spine') %}
{{ configure_routing_instances(1) }}
{{ configure_bgp_spine() }}
{% else %}
{{ configure_routing_instances(0) }}
{{ configure_bgp_leaf() }}
{% endif %}
